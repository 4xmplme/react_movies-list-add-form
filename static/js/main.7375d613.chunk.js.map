{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getDefaultPattern","fieldName","value","message","TextField","name","label","placeholder","required","getPattern","useState","Math","random","toFixed","slice","id","useFormContext","register","errors","formState","pattern","htmlFor","type","classNames","getUrlPattern","NewMovie","onAdd","methods","useForm","mode","handleSubmit","reset","isDisabledSubmit","isValid","isDirty","useEffect","isSubmitSuccessful","onSubmit","formFields","disabled","App","moviesFromServer","setMovies","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7375d613.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\ntype Props = {\n  name: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  getPattern?: (fieldName: string) => { value: RegExp, message: string },\n};\n\nconst getRandomDigits = () => Math.random().toFixed(16).slice(2);\n\nfunction getDefaultPattern(fieldName: string) {\n  return {\n    value: /./g,\n    message: `${fieldName}'s pattern is not valid`,\n  };\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  getPattern = getDefaultPattern,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const { register, formState: { errors } } = useFormContext();\n  const pattern = getPattern(label);\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          {...register(name, {\n            pattern: {\n              value: pattern.value,\n              message: pattern.message,\n            },\n            required: {\n              value: required,\n              message: `${label} is required`,\n            },\n          })}\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          placeholder={placeholder}\n          className={classNames('input', {\n            'is-danger': errors[name]?.message,\n          })}\n        />\n      </div>\n\n      {errors[name]?.message && (\n        <p className=\"help is-danger\">\n          {errors[name]?.message}\n        </p>\n      )}\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useForm, SubmitHandler, FormProvider } from 'react-hook-form';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype OnAdd = (movie: Movie) => void;\n\ntype FormFields = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n};\n\nconst getUrlPattern = (fieldName: string) => ({\n  // eslint-disable-next-line max-len\n  value: /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/,\n  message: `${fieldName} is not valid URL`,\n});\n\nexport const NewMovie = ({ onAdd }: { onAdd: OnAdd }) => {\n  const methods = useForm<FormFields>({ mode: 'onBlur' });\n  const { handleSubmit, reset, formState } = methods;\n  const isDisabledSubmit = !formState.isValid || !formState.isDirty;\n\n  const onSubmit: SubmitHandler<FormFields> = (formFields) => {\n    onAdd(formFields);\n    reset();\n  };\n\n  useEffect(() => {\n    if (formState.isSubmitSuccessful) {\n      reset();\n    }\n  }, [formState, reset]);\n\n  return (\n    <FormProvider {...methods}>\n      <form\n        className=\"NewMovie\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <h2 className=\"title\">Add a movie</h2>\n\n        <TextField\n          name=\"title\"\n          label=\"Title\"\n          required\n        />\n\n        <TextField\n          name=\"description\"\n          label=\"Description\"\n        />\n\n        <TextField\n          name=\"imgUrl\"\n          label=\"Image URL\"\n          required\n          getPattern={getUrlPattern}\n        />\n\n        <TextField\n          name=\"imdbUrl\"\n          label=\"Imdb URL\"\n          required\n          getPattern={getUrlPattern}\n        />\n\n        <TextField\n          name=\"imdbId\"\n          label=\"Imdb ID\"\n          required\n        />\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              data-cy=\"submit-button\"\n              disabled={isDisabledSubmit}\n              className=\"button is-link\"\n            >\n              Add\n            </button>\n          </div>\n        </div>\n      </form>\n    </FormProvider>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={movie => setMovies(prev => [...prev, movie])} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}